# AUTOGENERATED! DO NOT EDIT! File to edit: 01_Advanced_Request.ipynb (unless otherwise specified).

__all__ = ['find_candidate_content_list', 'find_content_list', 'get_content_list', 'is_next_page', 'get_next_page_url',
           'get_childrens', 'get_prefix', 'get_item_data', 'find_item_id']

# Cell
import requests,json,re
from bs4 import BeautifulSoup,Tag

# Cell
def find_candidate_content_list(soup,result=[]):
    childrens =[i for i in soup.children if isinstance(i, Tag)]
    if (len(childrens))>0:
        # 这里取列表行数大于5，item tag都相同的，而且内容大于500的
        if len(childrens)>5 and len(set([c.name for c in childrens])) == 1 and len(soup.text)>500:
            print('推测：',len(childrens),len(soup.text),soup.name,soup.attrs,childrens[0].name,childrens[0].attrs,)
            result.append([len(childrens),childrens])
        # 继续向下寻找
        for c in childrens:
            find_candidate_content_list(c,result)
    return result

def find_content_list(candidates):
    # 取记录条数最多的
    max_count = 0
    childrens = []
    for c in candidates:
        if int(c[0])>max_count:
            max_count = c[0]
            childrens = c[1]
    print('选择：',max_count)
    return childrens

def get_content_list(url,headers = {'user-agent':'Mozilla/5.0'},cookies={}):
    res = requests.get(url,headers=headers,cookies=cookies)
    if (res.status_code == 200):
        soup = BeautifulSoup(res.text)
        body = soup.body
        candidates = find_candidate_content_list(body)
        return find_content_list(candidates)
    else:
        return res

# Cell
def is_next_page(tag):
    if tag.name == 'a':
        for text in ['下一页','后页']:
            if text in tag.text:
                return True
    else:
        return False

def get_next_page_url(url,headers = {'user-agent':'Mozilla/5.0'},cookies={}):
    res = requests.get(url,headers=headers,cookies=cookies)
    if (res.status_code == 200):
        soup = BeautifulSoup(res.text)
#         print(soup)
        next_page = soup.find(is_next_page)
        if (next_page):
            return next_page['href']
        else:
            print('没有下一页')
            return None
    else:
        return res

# Cell
def get_childrens(soup):
    return [s for s in soup.contents if isinstance(s,Tag)]

def get_prefix(soup):
    if 'class' in soup.attrs and len(soup.attrs['class']) > 0:
        prefix = soup.name+'.'+soup.attrs['class'][0]
    elif 'id' in soup.attrs:
        prefix = soup.name+'.'+soup.attrs['id']
    else:
        prefix = soup.name
    return prefix

def get_item_data(soup,db={}):
    childrens = get_childrens(soup)
    if len(childrens) > 0:
        for c in childrens:
            db[get_prefix(c)] = {}
            get_item_data(c,db[get_prefix(c)])
    else:
        if soup.name == 'a':
            db['href'] = soup['href']
            if 'title' in soup.attrs:
                db['title'] = soup['title']
        elif soup.name == 'img':
            db['src'] = soup['src']
        else:
            db['text'] = soup.text.strip()
    return db

def find_item_id(soup):
    # 找到内容id，思路是a标签，有title，有href，然后取里面数字
    for a in soup.find_all('a'):
        if 'title' in a.attrs and 'href' in a.attrs:
            id = re.search(r'\d+',a['href']).group(0)
            return id
